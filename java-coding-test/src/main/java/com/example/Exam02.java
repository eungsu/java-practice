package com.example;

/*
문제 설명
당신은 냉장고 A/S센터에서 일을 하고 있습니다.

이 A/S센터에서는 하루에 최대 int num개의 냉장고를 고칠 수 있습니다.
당신의 임무는 매일 아침 센터에 도착하는 냉장고의 수에 대한 기록을 고려할 때, 
모든 냉장고를 수리하기 위해 며칠을 일해야 되는지 계산하는것 입니다.

예를 들어, 센터에서 하루에서 최대 8개의 냉장고를 수리할 수 있고 5일 동안 각각 10개, 0개, 0개, 4개, 20개의 냉장고를 받는다고 가정하면, 
센터는 1일과 2일에 운영되고 3일에는 일하지 않으며, 4일에서 7일 까지는 다시 운영됩니다. 
일하는 일을 모두 합치면, 모든 냉장고를 수리하기 위해 6일이 소요 되는것을 알 수 있습니다. 

각 일자별로 도착하는 냉장고의 개수를 나타내는, 정수 배열 타입 int[] arr와 
하루에 최대로 고칠 수 있는 냉장고의 수를 나타내는 정수 int num이 주어집니다. 

모든 냉장고를 고치기 위하여 필요한 작업 일수를 리턴하세요.

참고 / 제약 사항
arr는 1개 이상, 20개 이하 입니다.
arr의 각 요소의 값은 0이상 100이하 입니다.
day는 1이상 50이하 입니다.
테스트 케이스
int[] arr = {10,0,0,4,20}
int num = 8리턴(정답): 6
문제의 예제 입니다.

int[] arr = {0,0,0}
int num = 10              
(정답): 0

int[] arr = {100,100}
int num = 10                                
(정답): 20

int[] arr = {27,0,0,0,0,9}
int num = 9                                 
(정답): 4

int[] arr = {6,5,4,3,2,1,0,0,1,2,3,4,5,6}
int num = 3                                 
(정답): 15
*/

public class Exam02 {
    public static void main(String []args){
        int[] arr = {10, 0, 0, 4, 20};
        int num = 8;
        int day = 0;
        
        for (int i=0; i<arr.length; i++) {
        
            // 해당 일자의 처리 갯수를 조회한다.
            int amount = arr[i];
            // 처리갯수가 0개면 아랫부분을 실행하지 않고 증감식으로 이동한다.
            // 작업일수가 증가되지 않음
            if (amount == 0) {
                continue;
            }
            
            if (amount <= num) {
                // 처리대상갯수가 하루 처리량보다 적거나 같은 경우
                // 해당일자의 처리대상 갯수를 0으로 설정한다.
                arr[i] = 0;
                // 작업일수를 증가시킨다.
                day++;
            } else {
                // 처리대상객수가 하루 처리량보다 많은 경우
                // 남은 갯수를 계산한다.
                int remain = amount - num;
                
                arr[i] = 0;
                if (i < arr.length - 1) {
                    // 처리중인 대상이 배열의 맨 마지막이 아닌 경우
                    // 현재 위치 다음번의 값에 남은 수량을 더한다.
                    arr[i+1] = arr[i+1] + remain;
                } else {
                    // 처리중인 대상이 배열의 맨 마지막번째 이고,
                    // 처리할 냉장고가 남아 있는 경우
                    // 현재 배열보다 배열의 크기가 1큰 배열을 생성한다.
                    int[] temp = new int[arr.length + 1];
                    // arr배열의 값을 temp배열에 복사한다.
                    System.arraycopy(arr, 0, temp, 0, arr.length);
                    temp[i+1] = remain;
                    // 복사된 배열을 다시 arr에 대입한다.
                    arr = temp;
                }
                day++;
            }
        }
        System.out.println("총 작업일수 : " + day);
    }
}

/*
    프로그램 실행 흐름

    int[] arr = {10, 0, 0, 4, 20};
    int num = 8;
    int day = 0;

    // 1일차에 10대, 2일차 0대, 3일차 0대, 4일차 4대, 5일차 20대의 냉장고가 접수됨
    // 하루 8대만 수리 가능한 경우 입고된 냉장고를 전부 수리하는 데 소요되는 날짜는 며칠인지를 계산하기

    -----------------------------------------------------------------------------------------------------------------------------
    순번        전날 미처리된 냉장고 수     입고된 냉장고 수        수리된 냉장고 수         미처리된 냉장고 수        작업여부
    -----------------------------------------------------------------------------------------------------------------------------
    1          0                           10                      8                       2                       O
    2          2                           0                       2                       0                       O
    3          0                           0                       X                       X                       X
    4          0                           4                       4                       0                       O
    5          0                           20                      8                       12                      O
    6          12                          0                       8                       4                       O
    7          4                           0                       4                       0                       O
    ------------------------------------------------------------------------------------------------------------------------------ 
    총 작업일수                                                                                                     6일
    
     
    배열의 데이터 상태
    ------------------------------------------------------------------------------------------------------------------------------
    인덱스      현재상태                                 작업후 배열상태            작업내용
    ------------------------------------------------------------------------------------------------------------------------------
    0           [10, 0, 0, 4, 20]                       [0, 2, 0, 4, 20]          10대 중 8대를 수리하고, 미처리된 것은 다음날에 대입
    1           [0,  2, 0, 4, 20]                       [0, 0, 0, 4, 20]          2대를 수리함.
    2           [0,  0, 0, 4, 20]                       [0, 0, 0, 4, 20]          수리할 내용 없음
    3           [0,  0, 0, 4, 20]                       [0, 0, 0, 0, 20]          4대를 수리함.
    4           [0,  0, 0, 0, 20]                       [0, 0, 0, 0, 0, 12]       20대 중 8대를 수리하고, 미처리된 것은 다음날에 대입
    5           [0,  0, 0, 0, 0, 12]                    [0, 0, 0, 0, 0, 0, 4]     12대 중 8대를 수리하고, 미처리된 것은 다음날에 대입
    6           [0,  0, 0, 0, 0, 0, 4]                  [0, 0, 0, 0, 0, 0, 0]     4대를 수리함
    -------------------------------------------------------------------------------------------------------------------------------

*/
